// =================
// Quadro de missões
// =================
var parser = function fParse(msgText) {
	let text = "";
	
	let downtime = /downtime/gi.exec(msgText)
	let dinheiro = /dinheiro pago/gi.exec(msgText) || /dinheiro gasto/gi.exec(msgText)
	if (downtime != null && dinheiro != null) return ""

	// Horario
	let horario = /dia:([^]+?)\n/gi.exec(msgText)
	if (horario == null)
		horario = /data:([^]+?)\n/gi.exec(msgText)
	if (horario == null)
		horario = /hor[aá]rio:?([^]+?)\n/gi.exec(msgText)
	horario = horario == null ? "" : horario[1].trim()
	
	// Data
	let data = /(\d\d)[/]?(\d\d)/gi.exec(horario)
	data = data == null ? "" : data[1].trim() + "/" + data[2].trim()
	text += `${data}\t`

	horario = /hor[aá]rio:?([^]+?)\n/gi.exec(msgText)
	horario = horario == null ? "" : horario[1].trim()
				
	// Hora
	let hora = /(\d\d)[:h]?(\d\d)/gi.exec(horario)
	hora = hora == null ? "" : hora[1].trim() + ":" + hora[2].trim()
	text += `${hora}\t`
	
	// Nome
	let mestre = /mestr[ae]:([^]+?)\n/gi.exec(msgText)
	mestre = mestre == null ? "" : mestre[1].trim()
	text += `${mestre}\t`
	
	// Missão
	let nome = /nome da miss[aã]o:([^]+?)\n/gi.exec(msgText)
	if (nome == null) 
		nome = /nome:([^]+?)\n/gi.exec(msgText)
	if (nome == null) 
		nome = /t[ií]tulo:([^]+?)\n/gi.exec(msgText)
	nome = nome == null ? "" : nome[1].trim()
	text += `${nome}\t`
	
	// Dificuldade
	let dificuldade = /dificuldade:([^]+?)\n/gi.exec(msgText)
	if (dificuldade == null)
		dificuldade = /periculosidade:([^]+?)\n/gi.exec(msgText)
	dificuldade = dificuldade == null ? "" : dificuldade[1].trim()
	dificuldade = /verde|amarela|vermelha|preta/gi.exec(dificuldade)
	dificuldade = dificuldade == null ? "" : dificuldade[0]
	text += `${dificuldade}\t`
	
	
	let vagasTotal = /vagas:([^]+?)\n/gi.exec(msgText)
	
	// Vagas / Vagas Ocupadas
	let vagas = /(\d)\/?(\d?)/gi.exec(vagasTotal)
	let vagasOcupadas = vagas == null ? "" : vagas[1]
	vagas = vagas == null ? "" : vagas[2]
	text += `${vagas}\t`
	text += `${vagasOcupadas}\t`
	
	// Tier
	let tier = /@?tier:?\s?(\d)/gi.exec(msgText)
	tier = tier == null ? "" : tier[1].trim()
	text += `${tier}\t`
	
	let linhaResultado = /(falha|sucesso)/gi.exec(msgText)
	
	// Resultado
	let resultado = /falha|sucesso/gi.exec(msgText)
	resultado = resultado == null ? "" : resultado[0].trim()
	text += `${resultado}\t`
	
	// XP
	let xp = /(\d+)\s?c?d?xp/gi.exec(msgText)
	xp = xp == null ? "" : xp[1].trim()
	text += `${xp}\t`
	
	// PdT
	let pdt = /(\d+)\s?pdt/gi.exec(msgText)
	pdt = pdt == null ? "" : pdt[1].trim()
	text += `${pdt}\t`
	
	// PO
	let po = /(\d+)\s?po/gi.exec(msgText)
	po = po == null ? "" : po[1].trim()
	text += `${po}\t`
	
	// Renome
	let renome = /(-?\d+)\s?renome/gi.exec(msgText)
	renome = renome == null ? "" : renome[1].trim()
	text += `${renome}\t`
	
	// Mortes
	text += `\t`
	
	// Estimativa
	let estimativa = /estimativa de tempo:([^]+?)\n/gi.exec(msgText)
	estimativa = estimativa == null ? "" : estimativa[1].trim()
	text += `${estimativa}\t`
	
	// Tempo
	let duracao = /dura[cç][aã]o:(\d+)/gi.exec(msgText)
	duracao = duracao == null ? "" : duracao[1].trim()
	text += `${duracao}\t`
	
	// Classificação
	let classificacao = /classificação:([^]+?)\n/gi.exec(msgText)
	classificacao = classificacao == null ? "" : classificacao[1].trim()
	
	classificacao = /(Livre|\d\d)/gi.exec(classificacao)
	classificacao = classificacao == null ? "" : classificacao[1].trim()
	text += `${classificacao}\t`
	
	// Validacao de linha vazia
	if (text.trim() == "") return ""
	
	// Supérbia
	let superbia = (msgText.match(/sup[eé]rbia/gi) || []).length
	text += `${superbia}\t`
	
	// Tenácitas
	let tenacitas = (msgText.match(/ten[aá]citas/gi) || []).length
	text += `${tenacitas}\t`
	
	// Únio
	let unio = (msgText.match(/[uú]nio/gi) || []).length
	text += `${unio}\t`
	
	// Vigil
	let vigil = (msgText.match(/vigil/gi) || []).length
	text += `${vigil}\t`
	
	text += `\n`
	
	return text
}

const MSG_CONTAINER = "message-2qnXI6 groupStart-23k01U wrapper-2a6GCs compact-T3H92H zalgo-jN1Ica"
const MSG_TEXT_CONTAINER = "markup-2BOw-j messageContent-2qWWxC"
var elements = document.getElementsByClassName(MSG_CONTAINER)
let finalText = ""
for(let i = 0; i < elements.length; i++) { 
	let e = elements[i].getElementsByClassName(MSG_TEXT_CONTAINER)[0]
	finalText += parser(e.innerText)
}
